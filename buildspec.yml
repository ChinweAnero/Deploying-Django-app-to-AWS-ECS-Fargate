version: 0.2

env:
  variables:
    AWS_REGION: eu-west-2
    REPO_URL: 707798379596.dkr.ecr.eu-west-2.amazonaws.com/frontend-ecr-repo

phases:
  pre_build:
    commands:
      - echo Fetching credentials from SSM Parameter Store
      - DOCKERHUB_USERNAME=$(aws ssm get-parameter --name "docker_username" --with-decryption --query "Parameter.Value" --output text)
      - DOCKERHUB_TOKEN=$(aws ssm get-parameter --name "docker_user_token" --with-decryption --query "Parameter.Value" --output text)
      - echo Logging into Docker Hub...
      - echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $REPO_URL
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${IMAGE_TAG:-latest}
  build:
    commands:
      - echo Building the Docker image...
      - docker build -t $REPO_URL:$IMAGE_TAG -f Dockerfile .
      - docker tag $REPO_URL:$IMAGE_TAG $REPO_URL:latest
  post_build:
    commands:
      - echo Pushing the Docker image to ECR...
      - docker push $REPO_URL:$IMAGE_TAG
      - docker push $REPO_URL:latest
      - echo Writing task definition...
      - export IMAGE_URI=$REPO_URL:$IMAGE_TAG
      - sed "s|<IMAGE_URI>|$IMAGE_URI|g" taskdef-template.json > taskdef.json
      - cat taskdef.json

      - echo "Registering task definition..."
      - TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)
      - echo "Generating appspec.json from template..."
      - sed "s|\[TASK_DEF_ARN\]|$TASK_DEF_ARN|g" appspec-template.json > appspec.json
      - echo "appspec.json generated:"
      - cat appspec.json


artifacts:
  files:
    - taskdef.json
    - appspec.json
