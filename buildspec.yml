version: 0.2

env:
  variables:
    AWS_REGION: eu-west-2
    PROM_DOCKER_IMAGE_NAME: "prom/prometheus"
    FRONTEND_REPO_URL: 707798379596.dkr.ecr.eu-west-2.amazonaws.com/frontend-ecr-repo
    OTEL_REPO_URL: 707798379596.dkr.ecr.eu-west-2.amazonaws.com/otel-config-repo
    PROMETHUES_REPO_URL: 707798379596.dkr.ecr.eu-west-2.amazonaws.com/prometheus-monitoring

phases:
  pre_build:
    commands:
      - echo Fetching credentials from SSM Parameter Store
      - DOCKERHUB_USERNAME=$(aws ssm get-parameter --name "docker_username" --with-decryption --query "Parameter.Value" --output text)
      - DOCKERHUB_TOKEN=$(aws ssm get-parameter --name "docker_user_token" --with-decryption --query "Parameter.Value" --output text)

      - echo Logging into Docker Hub...
      - echo $DOCKERHUB_TOKEN | docker login -u $DOCKERHUB_USERNAME --password-stdin
      - docker info | grep Username


      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $FRONTEND_REPO_URL
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $PROMETHUES_REPO_URL

      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${IMAGE_TAG:-latest}


      - export CLOUDWATCH_AGENT_SSM_NAME="/cwagent/config/prometheus"




  build:
    commands:
      - echo Building frontend Docker image...
      - docker build -t $FRONTEND_REPO_URL:$IMAGE_TAG -f Dockerfile .
      - docker tag $FRONTEND_REPO_URL:$IMAGE_TAG $FRONTEND_REPO_URL:latest

      - echo building promethues image...
      - docker pull $PROM_DOCKER_IMAGE_NAME:latest
      - docker tag $PROM_DOCKER_IMAGE_NAME:latest $PROMETHUES_REPO_URL:latest
      - docker tag $PROM_DOCKER_IMAGE_NAME:latest $PROMETHUES_REPO_URL:$IMAGE_TAG




  post_build:
    commands:
      - echo Pushing frontend image...
      - docker push $FRONTEND_REPO_URL:$IMAGE_TAG
      - docker push $FRONTEND_REPO_URL:latest


      - echo Pushing promethues image
      - docker push $PROMETHUES_REPO_URL:latest
      - docker push $PROMETHUES_REPO_URL:$IMAGE_TAG



      - echo Updating task definition with new frontend image URI...
      - export IMAGE_URI=$FRONTEND_REPO_URL:$IMAGE_TAG
      - sed "s|<IMAGE_URI>|$IMAGE_URI|g" taskdef-template.json > taskdef.json

      - echo Registering task definition...
      - TASK_DEF_ARN=$(aws ecs register-task-definition --cli-input-json file://taskdef.json --query 'taskDefinition.taskDefinitionArn' --output text)

      - echo Generating appspec.json from template...
      - sed "s|\[TASK_DEF_ARN\]|$TASK_DEF_ARN|g" appspec-template.json > appspec.json


artifacts:
  files:
    - taskdef.json
    - appspec.json
